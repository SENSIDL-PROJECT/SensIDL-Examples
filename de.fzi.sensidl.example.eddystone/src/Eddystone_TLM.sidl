/* 
 * Challenge: The core Bluetooth data types are defined in the standard as little-endian, 
 * but Eddystone's multi-value bytes defined in the service data (see ServiceData_UID) are all big-endian.
 */
sensorInterface EddyStone_TLM /** Eddystone protocol specification with frame-type: Eddystone-TLM */ {
      encoding: SENSIDL_BINARY, endianness: BIG_ENDIAN, alignment: 1 BIT
      sensorData {

      	  /* 
      	   * The message starts with bluetooth data types as specified in the bluetooth core specification. 
      	   * DATA_TYPE_SERVICE_UUIDS_16_BIT_COMPLETE and DATA_TYPE_SERVICE_DATA are mandatory (and little-endian).
      	   * Other data types are optional.
      	   */
          dataSet DATA_TYPE_SERVICE_UUIDS_16_BIT_COMPLETE {
          	LENGTH as UINT8 constant value = "3"
          	SERVICE_UUIDS_16_BIT_COMPLETE_DATA_TYPE as UINT8 constant value = "3" /**Default value for identification. */
          	EDDYSTONE_16_BIT_UUID as UINT16 constant value = "65194" /** Fixed UUID for service identification. Hex: 0xFEAA */
          }
          
          dataSet DATA_TYPE_SERVICE_DATA {
          	LENGTH as UINT8 constant value = "17" /** The length consists of the length of the service data type and the length of the actual service data. */
          	SERVICE_DATA_DATA_TYPE_VALUE as UINT8 constant value = "22" /** Default value for identification. */
          	EDDYSTONE_16_BIT_UUID as UINT16 constant value = "65194" /** Fixed UUID for service identification. Hex: 0xFEAA */
          }
          
          /*
           * The following service data is defined as big-endian. 
           * The data being transmitted indicates the internal state of the beacon device with information like battery charge. 
           * The byte-sequence is fix and arranged as shown below.
           */
          dataSet SERVICE_DATA_TLM {
          	// Service data consists of 1 byte for TLM-frame type, 1 byte for version, 2 bytes for battery voltage, 
          	// 2 bytes for beacon temperature, 4 bytes advertising the PDU count and 4 bytes for value of time since power-on or reboot.
          	TLM_FRAME_TYPE as UINT8 constant value = "32" // Hex: 0x20.
          	
          	TLM_VERSION as UINT8 constant value = "0" // Hex: 0x00 by default.
          	
          	// Defined as measurement (unit support). Battery voltage is the current battery charge in volts. 
          	TLM_VBATT as UINT16 in V 
          	
          	// Defined as measurement. Corresponds to the current temperature measured in °C.
          	TLM_TEMP as UINT16 in °C 
          	
          	TLM_ADC_CNT as UINT64 // Defined as non-measurement (no units).
          	
          	// Defined as measurement. This value has to be measured in seconds.
          	// Instead we use minute with double as data type. For that, the measured second are adjusted with scaling factor and offset.
          	TLM_SEC_CNT as DOUBLE in s adjusted with scaling factor : 0.017 and offset : 0
          	
          	// Hard-coded option:
          	/*
          	TLM_VBATT_BYTE_2 as UINT8
          	TLM_VBATT_BYTE_3 as UINT8
          	// Alternatively
          	// TML_VBATT as UINT16
          	  	
          	TLM_TEMP_BYTE_4 as UINT8
          	TLM_TEMP_BYTE_5 as UINT8
          	// Alternatively
          	// TML_TEMP as UINT16
          	
          	TLM_ADV_CNT_BYTE_6 as UINT8
          	TLM_ADV_CNT_BYTE_7 as UINT8
          	TLM_ADV_CNT_BYTE_8 as UINT8
          	TLM_ADV_CNT_BYTE_9 as UINT8
          	// Alternatively
          	// TLM_ADV_CNT as UINT64
          	
          	TLM_SEC_CNT_BYTE_10 as UINT8
          	TLM_SEC_CNT_BYTE_11 as UINT8
          	TLM_SEC_CNT_BYTE_12 as UINT8
          	TLM_SEC_CNT_BYTE_13 as UINT8
          	// Alternatively
          	// TLM_SEC_CNT as UINT64
          	*/
          }
     }
}
